{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "2.0.0",
    "termsOfService" : "https://exoscale.com/terms",
    "contact" : {
      "email" : "api@exoscale.com",
      "name" : "API support",
      "url" : "https://portal.exoscale.com/tickets"
    },
    "title" : "Exoscale Public API",
    "description" : "\nInfrastructure automation API, allowing programmatic access to all Exoscale products and services.\n\nThe [OpenAPI Specification](http://spec.openapis.org/oas/v3.0.3.html) source of this documentation can be obtained here:\n\n* [JSON format](https://bump.sh/doc/exoscale-api.json)\n* [YAML format](https://bump.sh/doc/exoscale-api.yaml)"
  },
  "tags" : [ {
    "description" : "\nSecurity Groups are groups of firewall rules that regulate network traffic to and from your Compute instances.\n\n[Read more](https://community.exoscale.com/documentation/compute/security-groups/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/security-groups/"
    },
    "name" : "security-groups"
  }, {
    "description" : "\nAn Instance Type is a resource describing the amount of CPU, RAM and eventually GPUs your Compute instance will run on.\n\n[Read more](https://www.exoscale.com/pricing/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/pricing/"
    },
    "name" : "instance-types"
  }, {
    "description" : "\nA Network Load Balancer (NLB) is a Layer 4 (TCP/UDP) load balancer that distributes incoming traffic to Compute instances managed by an Instance Pool.\n\n[Read more](https://community.exoscale.com/documentation/compute/network-load-balancer/)\n",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/network-load-balancer/"
    },
    "name" : "network-load-balancer"
  }, {
    "description" : "\nInstance Pools is an Exoscale service allowing users to provision managed groups of identical Compute instances automatically.\n\n[Read more](https://community.exoscale.com/documentation/compute/instance-pools/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/instance-pools/"
    },
    "name" : "instance-pools"
  }, {
    "description" : "\nEvents form the basis of the Exoscale audit-trail, a mechanism to query past events\nwhich happened on an organization\n\n[Read more](https://www.exoscale.com/audit-trail/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/audit-trail/"
    },
    "name" : "event"
  }, {
    "description" : "\nInstances are the virtual machines at the core of the Exoscale Compute service.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/compute/"
    },
    "name" : "instances"
  }, {
    "description" : "\nSnapshots provide a way to get point-in-time recovery for your Compute instance.\n\n[Read more](https://community.exoscale.com/documentation/compute/snapshots/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/snapshots/"
    },
    "name" : "snapshots"
  }, {
    "description" : "\nA Zone represents an independent datacenter in which Exoscale infrastructure is deployed into.\n\n[Read more](https://www.exoscale.com/datacenters/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/datacenters/"
    },
    "name" : "zones"
  }, {
    "description" : "\nSSH Keypairs\n\n[Read more](https://community.exoscale.com/documentation/compute/ssh-keypairs/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/documentation/compute/ssh-keypairs/"
    },
    "name" : "ssh-keypair"
  }, {
    "description" : "\nOperations describe the current state of an asynchronous operation.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://community.exoscale.com/"
    },
    "name" : "operations"
  }, {
    "description" : "\nTemplates contain the OS and the initial setup of a Compute instance.",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/templates/"
    },
    "name" : "templates"
  }, {
    "description" : "\nSKS is Exoscale's scalable Kubernetes service which provides managed Kubernetes\ncontrol planes with integrated support for Exoscale instance pools ands network load\nbalancers.\n[Read more](https://www.exoscale.com/scalable-kubernetes-service/)",
    "externalDocs" : {
      "description" : "Read more",
      "url" : "https://www.exoscale.com/scalable-kubernetes-service/"
    },
    "name" : "sks"
  } ],
  "components" : {
    "schemas" : {
      "dbaas-node-state" : {
        "type" : "object",
        "required" : [ "name", "state" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the service node"
          },
          "progress-updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state-progress-update"
            },
            "description" : "Extra information regarding the progress for current state"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "standby", "master", "read-replica" ],
            "description" : "Role of this node. Only returned for a subset of service types"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "leaving", "running", "syncing_data", "setting_up_vm", "unknown" ],
            "description" : "Current state of the service node"
          }
        },
        "description" : "Automatic maintenance settings"
      },
      "resource" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Resource ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name"
          }
        },
        "description" : "Resource"
      },
      "security-group-rule" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "protocol" : {
            "type" : "string",
            "enum" : [ "tcp", "esp", "icmp", "udp", "gre", "ah", "ipip", "icmpv6" ],
            "description" : "Network protocol"
          },
          "icmp" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "code" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 254,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false
              },
              "type" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 254,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false
              }
            },
            "description" : "ICMP details"
          },
          "end-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "End port of the range"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group rule ID"
          },
          "network" : {
            "type" : "string",
            "description" : "CIDR-formatted network allowed"
          },
          "flow-direction" : {
            "type" : "string",
            "enum" : [ "ingress", "egress" ],
            "description" : "Network flow direction to match"
          },
          "start-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Start port of the range"
          },
          "security-group" : {
            "$ref" : "#/components/schemas/security-group-resource",
            "description" : "Security Group allowed"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group rule description"
          }
        },
        "description" : "Security Group rule"
      },
      "enum-component-route" : {
        "type" : "string",
        "enum" : [ "dynamic", "private", "public", "privatelink" ]
      },
      "dbaas-service-type" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "readOnly" : true,
            "description" : "DbaaS service name"
          },
          "available-versions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "description" : "DbaaS service available versions"
          },
          "default-version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DbaaS service default version"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DbaaS service description"
          },
          "plans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-plan"
            },
            "readOnly" : true,
            "description" : "DbaaS service plans"
          }
        },
        "description" : "DBaaS service"
      },
      "private-network" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Private Network ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Private Network name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Private Network description"
          },
          "netmask" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network netmask"
          },
          "start-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network start IP address"
          },
          "end-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Private Network end IP address"
          },
          "leases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network-lease"
            },
            "readOnly" : true,
            "description" : "Private Network leased IP addresses"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Private Network labels"
          }
        },
        "description" : "Private Network"
      },
      "enum-component-usage" : {
        "type" : "string",
        "enum" : [ "primary", "replica" ]
      },
      "load-balancer" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Load Balancer ID"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer description"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer name"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "creating", "deleting", "running", "error" ],
            "readOnly" : true,
            "description" : "Load Balancer state"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Load Balancer creation date"
          },
          "ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Load Balancer public IP"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/load-balancer-service"
            },
            "description" : "Load Balancer Services"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Load Balancer Labels"
          }
        },
        "description" : "Load Balancer"
      },
      "elastic-ip" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Elastic IP ID"
          },
          "ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Elastic IP address"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Elastic IP description"
          },
          "healthcheck" : {
            "$ref" : "#/components/schemas/elastic-ip-healthcheck",
            "description" : "Elastic IP healthcheck"
          }
        },
        "description" : "Elastic IP"
      },
      "access-key-resource" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "domain" : {
            "type" : "string",
            "enum" : [ "partner", "sos" ],
            "description" : "Resource domain"
          },
          "resource-type" : {
            "type" : "string",
            "enum" : [ "product", "bucket" ],
            "description" : "Resource type"
          },
          "resource-name" : {
            "type" : "string",
            "description" : "Resource name"
          }
        },
        "description" : "Access key resource"
      },
      "dns-domain" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "readOnly" : true,
            "description" : "DNS domain ID"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain creation date"
          },
          "unicode-name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "DNS domain unicode name"
          }
        },
        "description" : "DNS domain"
      },
      "sks-kubeconfig-request" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "ttl" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Validity in seconds of the Kubeconfig user certificate (default: 30 days)"
          },
          "user" : {
            "type" : "string",
            "description" : "User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field."
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "List of roles. The certificate present in the Kubeconfig will have these roles set in the Org field."
          }
        },
        "description" : "Kubeconfig request for a SKS cluster"
      },
      "enum-kafka-acl-permissions" : {
        "type" : "string",
        "enum" : [ "admin", "read", "readwrite", "write" ]
      },
      "dbaas-service-notification" : {
        "type" : "object",
        "required" : [ "level", "message", "type", "metadata" ],
        "properties" : {
          "level" : {
            "type" : "string",
            "enum" : [ "warning", "notice" ],
            "description" : "Notification level"
          },
          "message" : {
            "type" : "string",
            "maxLength" : 1024,
            "minLength" : 1,
            "description" : "Human notification message"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "service_powered_off_removal", "service_end_of_life" ],
            "description" : "Notification type"
          },
          "metadata" : {
            "type" : "object",
            "description" : "Notification type"
          }
        },
        "description" : "Service notifications"
      },
      "instance-type" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance type ID"
          },
          "size" : {
            "type" : "string",
            "enum" : [ "large", "huge", "jumbo", "medium", "mega", "small", "extra-large", "titan", "micro", "colossus", "tiny" ],
            "readOnly" : true,
            "description" : "Instance type size"
          },
          "family" : {
            "type" : "string",
            "enum" : [ "gpu2", "gpu", "memory", "storage", "standard", "colossus", "cpu" ],
            "readOnly" : true,
            "description" : "Instance type family"
          },
          "cpus" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "CPU count"
          },
          "gpus" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "GPU count"
          },
          "authorized" : {
            "type" : "boolean",
            "readOnly" : true,
            "description" : "Requires authorization or publicly available"
          },
          "memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "Available memory"
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/zone-name"
            },
            "readOnly" : true,
            "description" : "Instance Type available zones"
          }
        },
        "description" : "Compute instance type"
      },
      "load-balancer-server-status" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "public-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "description" : "Backend server public IP"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "failure", "success" ],
            "description" : "Status of the instance's healthcheck"
          }
        },
        "description" : "Load Balancer Service status"
      },
      "dbaas-service-mysql" : {
        "type" : "object",
        "required" : [ "name", "plan", "type" ],
        "properties" : {
          "mysql-settings" : {
            "type" : "object",
            "description" : "MySQL-specific settings"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ ],
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "authentication" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of service users"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "connection-info" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "params" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              },
              "standby" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "MySQL connection information properties"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "MySQL version"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "component", "host", "port", "route", "usage" ],
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              }
            },
            "description" : "Service component information objects"
          },
          "backup-schedule" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "backup-hour" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 23,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
              },
              "backup-minute" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 59,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
              }
            },
            "description" : "Backup schedule"
          }
        }
      },
      "dbaas-service-kafka" : {
        "type" : "object",
        "required" : [ "name", "plan", "type" ],
        "properties" : {
          "kafka-connect-settings" : {
            "type" : "object",
            "description" : "Kafka Connect configuration values"
          },
          "kafka-connect-enabled" : {
            "type" : "boolean",
            "description" : "Whether Kafka Connect is enabled"
          },
          "kafka-settings" : {
            "type" : "object",
            "description" : "Kafka-specific settings"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "schema-registry-settings" : {
            "type" : "object",
            "description" : "Schema Registry configuration"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "kafka-rest-settings" : {
            "type" : "object",
            "description" : "Kafka REST configuration"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ ],
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "access-cert" : {
                  "type" : "string"
                },
                "access-cert-expiry" : {
                  "type" : "string",
                  "format" : "date-time"
                },
                "access-key" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of service users"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "kafka-rest-enabled" : {
            "type" : "boolean",
            "description" : "Whether Kafka REST is enabled"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
          },
          "acl" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "permission", "topic", "username" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "ID"
                },
                "permission" : {
                  "$ref" : "#/components/schemas/enum-kafka-acl-permissions",
                  "description" : "Kafka permission"
                },
                "topic" : {
                  "type" : "string",
                  "maxLength" : 249,
                  "minLength" : 1,
                  "description" : "Topic name pattern"
                },
                "username" : {
                  "type" : "string",
                  "maxLength" : 64,
                  "minLength" : 1,
                  "description" : "Username"
                }
              }
            },
            "description" : "List of Kafka ACL entries"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "connection-info" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "nodes" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "access-cert" : {
                "type" : "string"
              },
              "access-key" : {
                "type" : "string"
              },
              "rest-uri" : {
                "type" : "string"
              },
              "registry-uri" : {
                "type" : "string"
              }
            },
            "description" : "Kafka connection information properties"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "Kafka version"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "schema-registry-enabled" : {
            "type" : "boolean",
            "description" : "Whether Schema-Registry is enabled"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "component", "host", "port", "route", "usage" ],
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "kafka-authentication-method" : {
                  "$ref" : "#/components/schemas/enum-kafka-auth-method",
                  "description" : "Kafka authentication method. This is a value specific to the 'kafka' service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              }
            },
            "description" : "Service component information objects"
          },
          "authentication-methods" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "certificate" : {
                "type" : "boolean",
                "description" : "Whether certificate/SSL authentication is enabled"
              },
              "sasl" : {
                "type" : "boolean",
                "description" : "Whether SASL authentication is enabled"
              }
            },
            "description" : "Kafka authentication methods"
          }
        }
      },
      "dbaas-service-connection-pools" : {
        "type" : "object",
        "required" : [ "connection-uri", "database", "pool-mode", "pool-name", "pool-size", "username" ],
        "properties" : {
          "connection-uri" : {
            "type" : "string",
            "description" : "Connection URI for the DB pool"
          },
          "database" : {
            "type" : "string",
            "maxLength" : 40,
            "minLength" : 1,
            "description" : "Service database name"
          },
          "pool-mode" : {
            "type" : "string",
            "enum" : [ "transaction", "statement", "session" ],
            "description" : "PGBouncer pool mode"
          },
          "pool-name" : {
            "type" : "string",
            "maxLength" : 60,
            "minLength" : 1,
            "description" : "Connection pool name"
          },
          "pool-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 1000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Size of PGBouncer's PostgreSQL side connection pool"
          },
          "username" : {
            "type" : "string",
            "maxLength" : 64,
            "minLength" : 1,
            "description" : "Pool username"
          }
        },
        "description" : "PostgreSQL PGBouncer connection pools"
      },
      "quota" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "resource" : {
            "type" : "string",
            "description" : "Resource Name"
          },
          "usage" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Resource Usage"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Resource Limit. -1 for Unlimited"
          }
        },
        "description" : "Organization Quota"
      },
      "private-network-lease" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Private Network IP address"
          },
          "instance-id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Attached instance ID"
          }
        },
        "description" : "Private Network leased IP address"
      },
      "sks-nodepool-taint" : {
        "type" : "object",
        "required" : [ "value", "effect" ],
        "properties" : {
          "value" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool taint value"
          },
          "effect" : {
            "type" : "string",
            "enum" : [ "NoExecute", "NoSchedule", "PreferNoSchedule" ],
            "description" : "Nodepool taint effect"
          }
        },
        "description" : "Nodepool taint"
      },
      "deploy-target" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Deploy Target ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Deploy Target name"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "edge", "dedicated" ],
            "description" : "Deploy Target type"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Deploy Target description"
          }
        },
        "description" : "Deploy target"
      },
      "snapshot" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Snapshot ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Snapshot name"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Snapshot creation date"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "snapshotting", "deleted", "exporting", "ready", "deleting", "error", "exported" ],
            "description" : "Snapshot state"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "readOnly" : true,
            "description" : "Snapshot size in GB"
          },
          "export" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "presigned-url" : {
                "type" : "string",
                "description" : "Exported snapshot disk file pre-signed URL"
              },
              "md5sum" : {
                "type" : "string",
                "description" : "Exported snapshot disk file MD5 checksum"
              }
            },
            "description" : "Exported snapshot information"
          },
          "instance" : {
            "$ref" : "#/components/schemas/instance",
            "description" : "Compute Instance snapshotted"
          }
        },
        "description" : "Snapshot"
      },
      "dbaas-service-user-access-control" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "redis-acl-categories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Command category rules"
          },
          "redis-acl-commands" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Rules for individual commands"
          },
          "redis-acl-keys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Key access rules"
          }
        },
        "description" : "Service specific access controls for user"
      },
      "event" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Time at which the event happened, millisecond resolution"
          },
          "payload" : {
            "type" : "object",
            "description" : "Event payload. This is a free-form map"
          }
        },
        "description" : "A notable event which happened on the infrastructure"
      },
      "elastic-ip-healthcheck" : {
        "type" : "object",
        "required" : [ "mode", "port" ],
        "properties" : {
          "strikes-fail" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of attempts before considering the target unhealthy (default: 3)"
          },
          "tls-sni" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "SNI domain for HTTPS healthchecks"
          },
          "uri" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Healthcheck URI"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "tcp", "http", "https" ],
            "description" : "Healthcheck mode"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 5,
            "maximum" : 300,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Interval between the checks (default: 10)"
          },
          "timeout" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 2,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck timeout value (default: 2)"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck port"
          },
          "strikes-ok" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of attempts before considering the target healthy (default: 2)"
          },
          "tls-skip-verify" : {
            "type" : "boolean",
            "description" : "Skip TLS verification"
          }
        },
        "description" : "Elastic IP address healthcheck"
      },
      "load-balancer-service-healthcheck" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "mode" : {
            "type" : "string",
            "enum" : [ "tcp", "http", "https" ],
            "description" : "Healthcheck mode"
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 5,
            "maximum" : 300,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck interval (default: 10)"
          },
          "uri" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Healthcheck URI"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck port"
          },
          "timeout" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 2,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Healthcheck timeout value (default: 2)"
          },
          "retries" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 20,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Number of retries before considering a Service failed"
          },
          "tls-sni" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "SNI domain for HTTPS healthchecks"
          }
        },
        "description" : "Load Balancer Service healthcheck"
      },
      "access-key-operation" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "Name of the operation"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Tags associated with the operation"
          }
        },
        "description" : "Access key operation"
      },
      "ssh-key" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "SSH key name"
          },
          "fingerprint" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "SSH key fingerprint"
          }
        },
        "description" : "SSH key"
      },
      "load-balancer-service" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "protocol" : {
            "type" : "string",
            "enum" : [ "tcp", "udp" ],
            "description" : "Network traffic protocol"
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "round-robin", "source-hash" ],
            "description" : "Load balancing strategy"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Load Balancer Service ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer Service name"
          },
          "healthcheck-status" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/load-balancer-server-status"
            },
            "readOnly" : true,
            "description" : "Healthcheck status per backend server"
          },
          "target-port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
          },
          "healthcheck" : {
            "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
            "description" : "Healthcheck configuration"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Port exposed on the Load Balancer's public IP"
          },
          "instance-pool" : {
            "$ref" : "#/components/schemas/instance-pool",
            "description" : "Instance Pool to forward network traffic to"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "creating", "deleting", "running", "updating", "error" ],
            "readOnly" : true,
            "description" : "Load Balancer Service state"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Load Balancer Service description"
          }
        },
        "description" : "Load Balancer Service"
      },
      "access-key" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "IAM Access Key name"
          },
          "key" : {
            "type" : "string",
            "description" : "IAM Access Key"
          },
          "secret" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "IAM Access Key Secret"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "restricted", "unrestricted" ],
            "readOnly" : true,
            "description" : "IAM Access Key type"
          },
          "version" : {
            "type" : "string",
            "enum" : [ "v2", "v1" ],
            "description" : "IAM Access Key version"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "IAM Access Key tags"
          },
          "operations" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "IAM Access Key operations"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/access-key-resource"
            },
            "description" : "IAM Access Key Resources"
          }
        },
        "description" : "IAM Access Key"
      },
      "dbaas-service-update" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the update"
          },
          "deadline" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Deadline for installing the update"
          },
          "start-after" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The earliest time the update will be automatically applied"
          },
          "start-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The time when the update will be automatically applied"
          }
        },
        "description" : "Update waiting to be installed"
      },
      "enum-kafka-auth-method" : {
        "type" : "string",
        "enum" : [ "certificate", "sasl" ]
      },
      "dbaas-plan" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DBaaS plan name"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan node count"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan CPU count per node"
          },
          "disk-space" : {
            "type" : "integer",
            "format" : "int64",
            "readOnly" : true,
            "description" : "DBaaS plan disk space"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan memory count per node"
          },
          "max-memory-percent" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "DBaaS plan max memory allocated percentage"
          },
          "backup-config" : {
            "$ref" : "#/components/schemas/dbaas-backup-config",
            "readOnly" : true,
            "description" : "DBaaS plan backup config"
          },
          "authorized" : {
            "type" : "boolean",
            "readOnly" : true,
            "description" : "Requires authorization or publicly available"
          }
        },
        "description" : "DBaaS plan"
      },
      "labels" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "dbaas-service-maintenance" : {
        "type" : "object",
        "required" : [ "dow", "time", "updates" ],
        "properties" : {
          "dow" : {
            "type" : "string",
            "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
            "description" : "Day of week for installing updates"
          },
          "time" : {
            "type" : "string",
            "maxLength" : 8,
            "minLength" : 8,
            "description" : "Time for installing updates, UTC"
          },
          "updates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-update"
            },
            "description" : "List of updates waiting to be installed"
          }
        },
        "description" : "Automatic maintenance settings"
      },
      "enum-service-state" : {
        "type" : "string",
        "enum" : [ "running", "rebuilding", "rebalancing", "poweroff" ]
      },
      "dbaas-service-pg" : {
        "type" : "object",
        "required" : [ "name", "plan", "type" ],
        "properties" : {
          "pgbouncer-settings" : {
            "type" : "object",
            "description" : "PGBouncer connection pooling settings"
          },
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "connection-pools" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "connection-uri", "database", "mode", "name", "size", "username" ],
              "properties" : {
                "connection-uri" : {
                  "type" : "string",
                  "description" : "Connection URI for the DB pool"
                },
                "database" : {
                  "type" : "string",
                  "maxLength" : 40,
                  "minLength" : 1,
                  "description" : "Service database name"
                },
                "mode" : {
                  "$ref" : "#/components/schemas/enum-pg-pool-mode",
                  "description" : "PGBouncer pool mode"
                },
                "name" : {
                  "type" : "string",
                  "maxLength" : 60,
                  "minLength" : 1,
                  "description" : "Connection pool name"
                },
                "size" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 1,
                  "maximum" : 1000,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Size of PGBouncer's PostgreSQL side connection pool"
                },
                "username" : {
                  "type" : "string",
                  "maxLength" : 64,
                  "minLength" : 1,
                  "description" : "Pool username"
                }
              }
            },
            "description" : "PostgreSQL PGBouncer connection pools"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "shared-buffers-percentage" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 20,
            "maximum" : 60,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "pglookout-settings" : {
            "type" : "object",
            "description" : "PGLookout settings"
          },
          "pg-settings" : {
            "type" : "object",
            "description" : "PostgreSQL-specific settings"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "timescaledb-settings" : {
            "type" : "object",
            "description" : "TimescaleDB extension configuration values"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ ],
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "access-control" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "allow-replication" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            },
            "description" : "List of service users"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "connection-info" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "params" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              },
              "standby" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "syncing" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              }
            },
            "description" : "PG connection information properties"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "PostgreSQL version"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "component", "host", "port", "route", "usage" ],
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              }
            },
            "description" : "Service component information objects"
          },
          "backup-schedule" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "backup-hour" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 23,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
              },
              "backup-minute" : {
                "type" : "integer",
                "format" : "int64",
                "minimum" : 0,
                "maximum" : 59,
                "exclusiveMinimum" : false,
                "exclusiveMaximum" : false,
                "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
              }
            },
            "description" : "Backup schedule"
          },
          "synchronous-replication" : {
            "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
            "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
          },
          "work-mem" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 1,
            "maximum" : 1024,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
          }
        }
      },
      "dbaas-integration" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "is-enabled" : {
            "type" : "boolean",
            "description" : "Whether the integration is enabled or not"
          },
          "settings" : {
            "type" : "object",
            "description" : "Integration settings"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Integration id"
          },
          "is-active" : {
            "type" : "boolean",
            "description" : "Whether the integration is active or not"
          },
          "status" : {
            "type" : "string",
            "description" : "Integration status"
          },
          "dest" : {
            "type" : "string",
            "description" : "Destination service name"
          },
          "source" : {
            "type" : "string",
            "description" : "Source service name"
          },
          "type" : {
            "type" : "string",
            "description" : "Integration type"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the integration"
          }
        }
      },
      "sks-oidc" : {
        "type" : "object",
        "required" : [ "client-id", "issuer-url" ],
        "properties" : {
          "client-id" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "OpenID client ID"
          },
          "issuer-url" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "OpenID provider URL"
          },
          "username-claim" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "JWT claim to use as the user name"
          },
          "username-prefix" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Prefix prepended to username claims"
          },
          "groups-claim" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "JWT claim to use as the user's group"
          },
          "groups-prefix" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Prefix prepended to group claims"
          },
          "required-claim" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "A key=value pair that describes a required claim in the ID Token"
          }
        },
        "description" : "SKS Cluster OpenID config map"
      },
      "operation" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Operation ID"
          },
          "reason" : {
            "type" : "string",
            "enum" : [ "incorrect", "unknown", "unavailable", "forbidden", "busy", "fault", "partial", "not-found", "interrupted", "unsupported", "conflict" ],
            "readOnly" : true,
            "description" : "Operation failure reason"
          },
          "reference" : {
            "$ref" : "#/components/schemas/reference",
            "readOnly" : true,
            "description" : "Related resource reference"
          },
          "message" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Operation message"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "failure", "pending", "success", "timeout" ],
            "readOnly" : true,
            "description" : "Operation status"
          }
        },
        "description" : "Operation"
      },
      "security-group-resource" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group name"
          }
        },
        "description" : "Security Group"
      },
      "enum-pg-pool-mode" : {
        "type" : "string",
        "enum" : [ "transaction", "statement", "session" ]
      },
      "instance" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "ipv6-address" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Instance IPv6 address"
          },
          "user-data" : {
            "type" : "string",
            "minLength" : 1,
            "description" : "Instance Cloud-init user-data"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Instance Type"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance ID"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Deploy Target"
          },
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Instance Anti-affinity Groups"
          },
          "ssh-key" : {
            "$ref" : "#/components/schemas/ssh-key",
            "description" : "Instance SSH Key"
          },
          "public-ip" : {
            "type" : "string",
            "format" : "ipv4",
            "readOnly" : true,
            "description" : "Instance public IPv4 address"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance name"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Instance Labels"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Instance disk size in GB"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Instance Security Groups"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Instance creation date"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Instance Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "description" : "Instance Template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "expunging", "starting", "destroying", "running", "stopping", "stopped", "migrating", "error", "destroyed" ],
            "readOnly" : true,
            "description" : "Instance state"
          },
          "snapshots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/snapshot"
            },
            "description" : "Instance Snapshots"
          },
          "elastic-ips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/elastic-ip"
            },
            "description" : "Instance Elastic IPs"
          },
          "manager" : {
            "$ref" : "#/components/schemas/manager",
            "readOnly" : true,
            "description" : "Instance manager"
          }
        },
        "description" : "Instance"
      },
      "dbaas-service-integration" : {
        "type" : "object",
        "required" : [ "active", "description", "dest-service", "dest-service-type", "enabled", "integration-type", "service-integration-id", "source-service", "source-service-type" ],
        "properties" : {
          "integration-status" : {
            "type" : "object",
            "description" : "Integration status"
          },
          "source-endpoint" : {
            "type" : "string",
            "description" : "Source endpoint name"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "True when integration is enabled"
          },
          "integration-type" : {
            "type" : "string",
            "description" : "Type of the integration"
          },
          "source-service-type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "dest-endpoint-id" : {
            "type" : "string",
            "description" : "Destination endpoint id"
          },
          "source-service" : {
            "type" : "string",
            "description" : "Source service name"
          },
          "dest-service-type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "service-integration-id" : {
            "type" : "string",
            "description" : "Integration ID"
          },
          "user-config" : {
            "type" : "object",
            "description" : "Service integration settings"
          },
          "dest-endpoint" : {
            "type" : "string",
            "description" : "Destination endpoint name"
          },
          "active" : {
            "type" : "boolean",
            "description" : "True when integration is active"
          },
          "source-endpoint-id" : {
            "type" : "string",
            "description" : "Source endpoint ID"
          },
          "dest-service" : {
            "type" : "string",
            "description" : "Destination service name"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the integration"
          }
        },
        "description" : "Integrations with other services"
      },
      "dbaas-service-name" : {
        "type" : "string",
        "maxLength" : 63,
        "minLength" : 0
      },
      "sks-cluster" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "addons" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "exoscale-cloud-controller", "metrics-server" ]
            },
            "uniqueItems" : true,
            "description" : "Cluster addons"
          },
          "auto-upgrade" : {
            "type" : "boolean",
            "description" : "Enable auto upgrade of the control plane to the latest patch version available"
          },
          "nodepools" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sks-nodepool"
            },
            "readOnly" : true,
            "description" : "Cluster Nodepools"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Cluster ID"
          },
          "cni" : {
            "type" : "string",
            "enum" : [ "calico" ],
            "description" : "Cluster CNI"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Cluster name"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "starter", "pro" ],
            "description" : "Cluster level"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Cluster labels"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Cluster creation date"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "rotating-ccm-credentials", "creating", "upgrading", "deleting", "running", "suspending", "updating", "error" ],
            "readOnly" : true,
            "description" : "Cluster state"
          },
          "version" : {
            "type" : "string",
            "description" : "Control plane Kubernetes version"
          },
          "endpoint" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Cluster endpoint"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Cluster description"
          }
        },
        "description" : "SKS Cluster"
      },
      "instance-pool" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "instance-prefix" : {
            "type" : "string",
            "maxLength" : 30,
            "minLength" : 1,
            "description" : "The instances created by the Instance Pool will be prefixed with this value (default: pool)"
          },
          "user-data" : {
            "type" : "string",
            "minLength" : 1,
            "description" : "Instances Cloud-init user-data"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Instances type"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Instance Pool ID"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Pool Deploy Target"
          },
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Instance Pool Anti-affinity Groups"
          },
          "ssh-key" : {
            "$ref" : "#/components/schemas/ssh-key",
            "description" : "Instances SSH key"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance Pool name"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Instance Pool Labels"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 10,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Instances disk size in GB"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Instance Pool Security Groups"
          },
          "ipv6-enabled" : {
            "type" : "boolean",
            "description" : "Enable IPv6 for instances"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Instance Pool Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "description" : "Instances template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "scaling-up", "scaling-down", "destroying", "creating", "suspended", "running" ],
            "readOnly" : true,
            "description" : "Instance Pool state"
          },
          "elastic-ips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/elastic-ip"
            },
            "description" : "Instances Elastic IPs"
          },
          "manager" : {
            "$ref" : "#/components/schemas/manager",
            "readOnly" : true,
            "description" : "Instance Pool manager"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Number of instances"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instance"
            },
            "readOnly" : true,
            "description" : "Instances"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Instance Pool description"
          }
        },
        "description" : "Instance Pool"
      },
      "reference" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Reference ID"
          },
          "link" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Link to the referenced resource"
          },
          "command" : {
            "type" : "string",
            "description" : "Command name"
          }
        },
        "description" : "Resource reference"
      },
      "dbaas-integration-type" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the integration."
          },
          "source-description" : {
            "type" : "string",
            "description" : "The description of the source service types."
          },
          "source-service-types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "A list of the source service types the integration supports."
          },
          "dest-description" : {
            "type" : "string",
            "description" : "The description of the destination service types."
          },
          "dest-service-types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "A list of the destination service types the integration supports."
          },
          "settings" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "properties" : {
                "type" : "object"
              },
              "additionalProperties" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string"
              },
              "title" : {
                "type" : "string"
              }
            },
            "description" : "A JSON schema of additional settings of the integration."
          }
        }
      },
      "sks-nodepool" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "instance-prefix" : {
            "type" : "string",
            "maxLength" : 30,
            "minLength" : 1,
            "description" : "The instances created by the Nodepool will be prefixed with this value (default: pool)"
          },
          "addons" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "linbit" ]
            },
            "uniqueItems" : true,
            "description" : "Nodepool addons"
          },
          "instance-type" : {
            "$ref" : "#/components/schemas/instance-type",
            "description" : "Nodepool Instances type"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Nodepool ID"
          },
          "deploy-target" : {
            "$ref" : "#/components/schemas/deploy-target",
            "description" : "Instance Pool Deploy Target"
          },
          "anti-affinity-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/anti-affinity-group"
            },
            "description" : "Nodepool Anti-affinity Groups"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool name"
          },
          "labels" : {
            "$ref" : "#/components/schemas/labels",
            "description" : "Nodepool labels"
          },
          "taints" : {
            "$ref" : "#/components/schemas/sks-nodepool-taints",
            "description" : "Nodepool taints"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 20,
            "maximum" : 50000,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Nodepool instances disk size in GB"
          },
          "security-groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group"
            },
            "description" : "Nodepool Security Groups"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Nodepool creation date"
          },
          "instance-pool" : {
            "$ref" : "#/components/schemas/instance-pool",
            "readOnly" : true,
            "description" : "Instance Pool managed by the Nodepool"
          },
          "private-networks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/private-network"
            },
            "description" : "Nodepool Private Networks"
          },
          "template" : {
            "$ref" : "#/components/schemas/template",
            "readOnly" : true,
            "description" : "Nodepool Instance template"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "renewing-token", "creating", "deleting", "running", "updating", "error" ],
            "readOnly" : true,
            "description" : "Nodepool state"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Nodepool version"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Number of instances"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Nodepool description"
          }
        },
        "description" : "SKS Nodepool"
      },
      "template" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "Template source URL"
          },
          "default-user" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Template default user"
          },
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Template ID"
          },
          "ssh-key-enabled" : {
            "type" : "boolean",
            "description" : "Enable SSH key-based login"
          },
          "visibility" : {
            "type" : "string",
            "enum" : [ "private", "public" ],
            "readOnly" : true,
            "description" : "Template visibility"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Template name"
          },
          "build" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template build"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "Template creation date"
          },
          "family" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template family"
          },
          "version" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template version"
          },
          "maintainer" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Template maintainer"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "Template size"
          },
          "checksum" : {
            "type" : "string",
            "description" : "Template MD5 checksum"
          },
          "password-enabled" : {
            "type" : "boolean",
            "description" : "Enable password-based login"
          },
          "boot-mode" : {
            "type" : "string",
            "enum" : [ "legacy", "uefi" ],
            "description" : "Boot mode (default: legacy)"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Template description"
          }
        },
        "description" : "Instance template"
      },
      "security-group" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Security Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Security Group description"
          },
          "external-sources" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "uniqueItems" : true,
            "description" : "Security Group external sources"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/security-group-rule"
            },
            "uniqueItems" : true,
            "writeOnly" : true,
            "description" : "Security Group rules"
          }
        },
        "description" : "Security Group"
      },
      "zone" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/zone-name",
            "readOnly" : true,
            "description" : "Zone short name"
          }
        },
        "description" : "Zone"
      },
      "dbaas-backup-config" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "max-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum number of backups to keep. Zero when no backups are created."
          },
          "interval" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "readOnly" : true,
            "description" : "The interval, in hours, at which backups are generated.\n                                            For some services, like PostgreSQL, this is the interval\n                                            at which full snapshots are taken and continuous incremental\n                                            backup stream is maintained in addition to that."
          },
          "recovery-mode" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "Mechanism how backups can be restored. 'regular'\n                                            means a backup is restored as is so that the system\n                                            is restored to the state it was when the backup was generated.\n                                            'pitr' means point-in-time-recovery, which allows restoring\n                                            the system to any state since the first available full snapshot."
          },
          "frequent-interval-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Interval of taking a frequent backup in service types supporting different backup schedules"
          },
          "frequent-oldest-age-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum age of the oldest frequent backup in service types supporting different backup schedules"
          },
          "infrequent-interval-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Interval of taking a frequent backup in service types supporting different backup schedules"
          },
          "infrequent-oldest-age-minutes" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "readOnly" : true,
            "description" : "Maximum age of the oldest infrequent backup in service types supporting different backup schedules"
          }
        },
        "description" : "DBaaS plan backup config"
      },
      "dbaas-service-redis" : {
        "type" : "object",
        "required" : [ "name", "plan", "type" ],
        "properties" : {
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "uri" : {
            "type" : "string",
            "description" : "URI for connecting to the service (may be absent)"
          },
          "backups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-backup"
            },
            "description" : "List of backups for the service"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ ],
              "properties" : {
                "type" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                },
                "password" : {
                  "type" : "string"
                },
                "access-control" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "categories" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "channels" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "commands" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "keys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            },
            "description" : "List of service users"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "redis-settings" : {
            "type" : "object",
            "description" : "Redis-specific settings"
          },
          "ip-filter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Allowed CIDR address blocks for incoming connections"
          },
          "node-states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-node-state"
            },
            "description" : "State of individual service nodes"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "connection-info" : {
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "uri" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "password" : {
                "type" : "string"
              },
              "slave" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Redis connection information properties"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "uri-params" : {
            "type" : "object",
            "description" : "service_uri parameterized into key-value pairs"
          },
          "version" : {
            "type" : "string",
            "description" : "Redis version"
          },
          "maintenance" : {
            "$ref" : "#/components/schemas/dbaas-service-maintenance",
            "description" : "Automatic maintenance settings"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          },
          "components" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "required" : [ "component", "host", "port", "route", "usage" ],
              "properties" : {
                "component" : {
                  "type" : "string",
                  "description" : "Service component name"
                },
                "host" : {
                  "type" : "string",
                  "description" : "DNS name for connecting to the service component"
                },
                "port" : {
                  "type" : "integer",
                  "format" : "int64",
                  "minimum" : 0,
                  "maximum" : 65535,
                  "exclusiveMinimum" : false,
                  "exclusiveMaximum" : false,
                  "description" : "Port number for connecting to the service component"
                },
                "route" : {
                  "$ref" : "#/components/schemas/enum-component-route",
                  "description" : "Network access route"
                },
                "ssl" : {
                  "type" : "boolean",
                  "description" : "Whether the endpoint is encrypted or accepts plaintext.\n             By default endpoints are always encrypted and\n             this property is only included for service components that may disable encryption."
                },
                "usage" : {
                  "$ref" : "#/components/schemas/enum-component-usage",
                  "description" : "DNS usage name"
                }
              }
            },
            "description" : "Service component information objects"
          }
        }
      },
      "zone-name" : {
        "type" : "string",
        "enum" : [ "ch-dk-2", "de-muc-1", "ch-gva-2", "ch-zrh-1", "at-vie-1", "de-fra-1", "bg-sof-1" ]
      },
      "cdn-configuration" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "bucket" : {
            "type" : "string",
            "description" : "CDN configuration bucket name"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "deactivated", "pending", "activated" ],
            "readOnly" : true,
            "description" : "CDN configuration status"
          },
          "fqdn" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "FQDN that serves the bucket contents"
          }
        },
        "description" : "CDN configuration"
      },
      "manager" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Manager ID"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "sks-nodepool", "instance-pool" ],
            "description" : "Manager type"
          }
        },
        "description" : "Resource manager"
      },
      "dbaas-node-state-progress-update" : {
        "type" : "object",
        "required" : [ "completed", "phase" ],
        "properties" : {
          "completed" : {
            "type" : "boolean",
            "description" : "Indicates whether this phase has been completed or not"
          },
          "current" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Current progress for this phase. May be missing or null."
          },
          "max" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Maximum progress value for this phase. May be missing or null. May change."
          },
          "min" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Minimum progress value for this phase. May be missing or null."
          },
          "phase" : {
            "type" : "string",
            "enum" : [ "stream", "basebackup", "prepare", "finalize" ],
            "description" : "Key identifying this phase"
          },
          "unit" : {
            "type" : "string",
            "description" : "Unit for current/min/max values. New units may be added.\n                        If null should be treated as generic unit"
          }
        },
        "description" : "Extra information regarding the progress for current state"
      },
      "sks-nodepool-taints" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/sks-nodepool-taint"
        }
      },
      "anti-affinity-group" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Anti-affinity Group ID"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Anti-affinity Group name"
          },
          "description" : {
            "type" : "string",
            "maxLength" : 255,
            "minLength" : 1,
            "description" : "Anti-affinity Group description"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/instance"
            },
            "readOnly" : true,
            "description" : "Anti-affinity Group instances"
          }
        },
        "description" : "Anti-affinity Group"
      },
      "dbaas-service-type-name" : {
        "type" : "string",
        "maxLength" : 64,
        "minLength" : 0
      },
      "dbaas-service-common" : {
        "type" : "object",
        "required" : [ "name", "plan", "type" ],
        "properties" : {
          "notifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dbaas-service-notification"
            },
            "description" : "Service notifications"
          },
          "node-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of service nodes in the active plan"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service last update timestamp (ISO 8601)"
          },
          "node-cpu-count" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Number of CPUs for each node"
          },
          "termination-protection" : {
            "type" : "boolean",
            "description" : "Service is protected against termination and powering off"
          },
          "name" : {
            "$ref" : "#/components/schemas/dbaas-service-name",
            "description" : "Service name"
          },
          "disk-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT disk space for data storage"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Service creation timestamp (ISO 8601)"
          },
          "type" : {
            "$ref" : "#/components/schemas/dbaas-service-type-name",
            "description" : "Service type code"
          },
          "state" : {
            "$ref" : "#/components/schemas/enum-service-state",
            "description" : "State of the service"
          },
          "plan" : {
            "type" : "string",
            "description" : "Subscription plan"
          },
          "node-memory" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "TODO UNIT of memory for each node"
          }
        }
      },
      "snapshot-export" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true,
            "description" : "Snapshot export ID"
          },
          "presigned-url" : {
            "type" : "string",
            "description" : "Snapshot export presigned url"
          },
          "md5sum" : {
            "type" : "string",
            "description" : "Snapshot export md5 checksum"
          }
        },
        "description" : "Snapshot export information. This data is transient."
      },
      "dns-domain-record" : {
        "type" : "object",
        "required" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true,
            "description" : "DNS domain record ID"
          },
          "priority" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "DNS domain record priority"
          },
          "content" : {
            "type" : "string",
            "description" : "DNS domain record content"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "soa", "ns" ],
            "description" : "DNS domain record priority"
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true,
            "description" : "DNS domain record TTL"
          },
          "name" : {
            "type" : "string",
            "description" : "DNS domain record name"
          },
          "created-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain record creation date"
          },
          "updated-at" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true,
            "description" : "DNS domain record update date"
          }
        },
        "description" : "DNS domain record"
      },
      "dbaas-service-components" : {
        "type" : "object",
        "required" : [ "component", "host", "port", "route", "usage" ],
        "properties" : {
          "component" : {
            "type" : "string",
            "description" : "Service component name"
          },
          "host" : {
            "type" : "string",
            "description" : "DNS name for connecting to the service component"
          },
          "kafka-authentication-method" : {
            "$ref" : "#/components/schemas/enum-kafka-auth-method",
            "description" : "Kafka authentication method. This is a value specific to the 'kafka' service component"
          },
          "path" : {
            "type" : "string",
            "description" : "Path component of the service URL (useful only if service component is HTTP or HTTPS endpoint)"
          },
          "port" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "maximum" : 65535,
            "exclusiveMinimum" : false,
            "exclusiveMaximum" : false,
            "description" : "Port number for connecting to the service component"
          },
          "route" : {
            "type" : "string",
            "enum" : [ "dynamic", "private", "public", "privatelink" ],
            "description" : "Network access route"
          },
          "ssl" : {
            "type" : "boolean",
            "description" : "Whether the endpoint is encrypted or accepts plaintext.\n                                           By default endpoints are always encrypted and\n                                           this property is only included for service components that may disable encryption."
          },
          "usage" : {
            "type" : "string",
            "enum" : [ "primary", "replica" ],
            "description" : "DNS usage name"
          }
        },
        "description" : "Service component information objects"
      },
      "dbaas-service-user" : {
        "type" : "object",
        "required" : [ "type", "username" ],
        "properties" : {
          "access-cert" : {
            "type" : "string",
            "description" : "Access certificate for TLS client authentication"
          },
          "access-cert-not-valid-after-time" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Access certificate validity end time (ISO8601)"
          },
          "access-control" : {
            "$ref" : "#/components/schemas/dbaas-service-user-access-control",
            "description" : "Service specific access controls for user"
          },
          "access-key" : {
            "type" : "string",
            "description" : "Service specific access controls for user"
          },
          "authentication" : {
            "type" : "string",
            "enum" : [ "caching_sha2_password", "mysql_native_password" ],
            "description" : "Access key for TLS client authentication"
          },
          "password" : {
            "type" : "string",
            "description" : "Account password. A missing field indicates a user overridden password."
          },
          "type" : {
            "type" : "string",
            "description" : "Account type"
          },
          "username" : {
            "type" : "string",
            "description" : "Account username"
          }
        },
        "description" : "List of service users"
      },
      "enum-pg-synchronous-replication" : {
        "type" : "string",
        "enum" : [ "quorum", "off" ]
      },
      "enum-pg-variant" : {
        "type" : "string",
        "enum" : [ "timescale", "aiven" ]
      },
      "dbaas-service-backup" : {
        "type" : "object",
        "required" : [ "backup-name", "backup-time", "data-size" ],
        "properties" : {
          "backup-name" : {
            "type" : "string",
            "description" : "Internal name of this backup"
          },
          "backup-time" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Backup timestamp (ISO 8601)"
          },
          "data-size" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : false,
            "description" : "Backup's original size before compression"
          }
        },
        "description" : "List of backups for the service"
      }
    }
  },
  "servers" : [ {
    "url" : "https://api-{zone}.exoscale.com/v2",
    "variables" : {
      "zone" : {
        "default" : "ch-gva-2",
        "enum" : [ "ch-gva-2", "ch-zrh-1", "de-fra-1", "de-muc-1", "at-vie-1", "bg-sof-1" ]
      }
    }
  } ],
  "paths" : {
    "/load-balancer/{id}/service/{service-id}" : {
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Load Balancer Service",
        "operationId" : "delete-load-balancer-service"
      },
      "put" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Load Balancer Service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Load Balancer Service name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "nullable" : true,
                    "description" : "Load Balancer Service description"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "udp" ],
                    "description" : "Network traffic protocol"
                  },
                  "strategy" : {
                    "type" : "string",
                    "enum" : [ "round-robin", "source-hash" ],
                    "description" : "Load balancing strategy"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port exposed on the Load Balancer's public IP"
                  },
                  "target-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
                    "description" : "Healthcheck configuration"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-load-balancer-service"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/load-balancer-service"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Load Balancer Service details",
        "operationId" : "get-load-balancer-service"
      }
    },
    "/instance-pool/{id}:scale" : {
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "size" ],
                "properties" : {
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of managed instances"
                  }
                }
              }
            }
          }
        },
        "operationId" : "scale-instance-pool"
      }
    },
    "/instance/{id}:create-snapshot" : {
      "post" : {
        "tags" : [ "instance", "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a Snapshot of a Compute instance",
        "operationId" : "create-snapshot"
      }
    },
    "/anti-affinity-group" : {
      "get" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "anti-affinity-groups" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/anti-affinity-group"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Anti-affinity Groups",
        "operationId" : "list-anti-affinity-groups"
      },
      "post" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Anti-affinity Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Anti-affinity Group name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Anti-affinity Group description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-anti-affinity-group"
      }
    },
    "/event" : {
      "get" : {
        "tags" : [ "event" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/event"
                  }
                }
              }
            }
          }
        },
        "description" : "Retrieve Events for a given date range. Defaults to retrieving Events\n          for the current and previous day. Both a `from` and `to` arguments can\n          be passed specifying dates to start from and to",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "from",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "to",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "summary" : "List Events",
        "operationId" : "list-events"
      }
    },
    "/security-group/{id}/rules/{rule-id}" : {
      "delete" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "rule-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Security Group rule",
        "operationId" : "delete-rule-from-security-group"
      }
    },
    "/access-key/{key}" : {
      "delete" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation revokes the specified IAM Access Key. Access Keys created by the revoked Access Key will not be revoked.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Revoke an IAM Access Key",
        "operationId" : "revoke-access-key"
      },
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/access-key"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve IAM Access Key details",
        "operationId" : "get-access-key"
      }
    },
    "/load-balancer" : {
      "post" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Load Balancer",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer description"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Load balancer labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-load-balancer"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "load-balancers" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/load-balancer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Load Balancers",
        "operationId" : "list-load-balancers"
      }
    },
    "/security-group" : {
      "post" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Security Group name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Security Group description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-security-group"
      },
      "get" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "security-groups" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/security-group"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Security Groups",
        "operationId" : "list-security-groups"
      }
    },
    "/dbaas-mysql/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-mysql"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS MySQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "mysql-settings" : {
                    "type" : "object",
                    "description" : "MySQL-specific settings"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "binlog-retention-period" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 600,
                    "maximum" : 86400,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-mysql"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-mysql"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS MySQL service",
        "operationId" : "get-dbaas-service-mysql"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-pg"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS MySQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS MySQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "plan" ],
                "properties" : {
                  "mysql-settings" : {
                    "type" : "object",
                    "description" : "MySQL-specific settings"
                  },
                  "recovery-backup-time" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "ISO time of a backup to recover from for services that support arbitrary times"
                  },
                  "admin-username" : {
                    "type" : "string",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "description" : "Custom username for admin user. This must be set only when a new service is being created."
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "admin-password" : {
                    "type" : "string",
                    "maxLength" : 256,
                    "minLength" : 8,
                    "description" : "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "MySQL major version"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "binlog-retention-period" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 600,
                    "maximum" : 86400,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector."
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-mysql"
      }
    },
    "/private-network/{id}:attach" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Static IP address lease for the corresponding network interface"
                  },
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "attach-instance-to-private-network"
      }
    },
    "/dbaas-service-type" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "dbaas-service-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dbaas-service-type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "List available service types for DBaaS",
        "parameters" : [ ],
        "summary" : "DBaaS Service Types",
        "operationId" : "list-dbaas-service-types"
      }
    },
    "/instance-type/{id}" : {
      "get" : {
        "tags" : [ "instance-type" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance-type"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Instance Type details",
        "operationId" : "get-instance-type"
      }
    },
    "/dns-domain/{id}/record" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "dns-domain-records" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dns-domain-record"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true
          }
        } ],
        "summary" : "List DNS domain records",
        "operationId" : "list-dns-domain-records"
      }
    },
    "/instance/{id}:resize-disk" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation resizes a Compute instance's disk volume. Note: the disk can only grow, cannot be shrunk.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Resize a Compute instance disk",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "disk-size" ],
                "properties" : {
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  }
                }
              }
            }
          }
        },
        "operationId" : "resize-instance-disk"
      }
    },
    "/dbaas-service" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "dbaas-services" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dbaas-service-common"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "List DBaaS services",
        "parameters" : [ ],
        "summary" : "List DBaaS services",
        "operationId" : "list-dbaas-services"
      }
    },
    "/elastic-ip" : {
      "post" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Elastic IP description"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/elastic-ip-healthcheck",
                    "description" : "Elastic IP healthcheck"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-elastic-ip"
      },
      "get" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "elastic-ips" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/elastic-ip"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Elastic IPs",
        "operationId" : "list-elastic-ips"
      }
    },
    "/zone" : {
      "get" : {
        "tags" : [ "zone" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "zones" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/zone"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Zones",
        "operationId" : "list-zones"
      }
    },
    "/instance-pool" : {
      "get" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "instance-pools" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance-pool"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Instance Pools",
        "operationId" : "list-instance-pools"
      },
      "post" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "size", "instance-type", "template", "disk-size" ],
                "properties" : {
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to instances names (default: pool)"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instances Cloud-init user-data"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instances type"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Deploy Target to deploy instances on"
                  },
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Anti-affinity Groups"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "description" : "Instances SSH key"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Pool Labels"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instances disk size in GB"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Security Groups"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6 for instances"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Private Networks"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instances template"
                  },
                  "elastic-ips" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/elastic-ip"
                    },
                    "uniqueItems" : true,
                    "description" : "Instances Elastic IPs"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of instances"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-instance-pool"
      }
    },
    "/sks-cluster-kubeconfig/{id}" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "kubeconfig" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "This operation returns a Kubeconfig file encoded in base64.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Generate a new Kubeconfig file for a SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sks-kubeconfig-request"
              }
            }
          }
        },
        "operationId" : "generate-sks-cluster-kubeconfig"
      }
    },
    "/dbaas-ca-certificate" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "certificate" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS CA Certificate",
        "parameters" : [ ],
        "summary" : "Get a CA Certificate required to reach a DBaaS service through a TLS-protected connection.",
        "operationId" : "get-dbaas-ca-certificate"
      }
    },
    "/deploy-target" : {
      "get" : {
        "tags" : [ "deploy-target" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "deploy-targets" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/deploy-target"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Deploy Targets",
        "operationId" : "list-deploy-targets"
      }
    },
    "/instance-type" : {
      "get" : {
        "tags" : [ "instance-type" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "instance-types" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance-type"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Compute instance Types",
        "operationId" : "list-instance-types"
      }
    },
    "/dbaas-kafka/{name}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-kafka"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS Kafka service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS Kafka service",
        "operationId" : "get-dbaas-service-kafka"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-kafka"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS Kafka service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Kafka service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "plan" ],
                "properties" : {
                  "kafka-connect-settings" : {
                    "type" : "object",
                    "description" : "Kafka Connect configuration values"
                  },
                  "kafka-connect-enabled" : {
                    "type" : "boolean",
                    "description" : "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka-settings" : {
                    "type" : "object",
                    "description" : "Kafka-specific settings"
                  },
                  "schema-registry-settings" : {
                    "type" : "object",
                    "description" : "Schema Registry configuration"
                  },
                  "kafka-rest-settings" : {
                    "type" : "object",
                    "description" : "Kafka REST configuration"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "kafka-rest-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Kafka-REST service"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Kafka major version"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "schema-registry-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Schema-Registry service"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "authentication-methods" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "certificate" : {
                        "type" : "boolean",
                        "description" : "Enable certificate/SSL authentication"
                      },
                      "sasl" : {
                        "type" : "boolean",
                        "description" : "Enable SASL authentication"
                      }
                    },
                    "description" : "Kafka authentication methods"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-kafka"
      },
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-kafka"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS Kafka service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS Kafka service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "kafka-connect-settings" : {
                    "type" : "object",
                    "description" : "Kafka Connect configuration values"
                  },
                  "kafka-connect-enabled" : {
                    "type" : "boolean",
                    "description" : "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network"
                  },
                  "kafka-settings" : {
                    "type" : "object",
                    "description" : "Kafka-specific settings"
                  },
                  "schema-registry-settings" : {
                    "type" : "object",
                    "description" : "Schema Registry configuration"
                  },
                  "kafka-rest-settings" : {
                    "type" : "object",
                    "description" : "Kafka REST configuration"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "kafka-rest-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Kafka-REST service"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "schema-registry-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable Schema-Registry service"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "authentication-methods" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "certificate" : {
                        "type" : "boolean",
                        "description" : "Enable certificate/SSL authentication"
                      },
                      "sasl" : {
                        "type" : "boolean",
                        "description" : "Enable SASL authentication"
                      }
                    },
                    "description" : "Kafka authentication methods"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-kafka"
      }
    },
    "/dbaas-settings-redis" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "required" : [ ],
                      "properties" : {
                        "redis" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Redis configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS PostgreSQL settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS PostgreSQL settings",
        "operationId" : "get-dbaas-settings-redis"
      }
    },
    "/access-key" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "access-keys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List IAM Access Keys",
        "operationId" : "list-access-keys"
      },
      "post" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/access-key"
                }
              }
            }
          }
        },
        "description" : "This operation creates a new IAM Access Key, which can either be restricted to specific API operations or unrestricted. The corresponding secret is only available in the response returned by this operation, the caller must take care of storing it safely as there is no other way to retrieve it.",
        "parameters" : [ ],
        "summary" : "Create an IAM Access Key",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "IAM Access Key name"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "IAM Access Key tags"
                  },
                  "operations" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "IAM Access Key operations"
                  },
                  "resources" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/access-key-resource"
                    },
                    "description" : "IAM Access Key Resources"
                  }
                },
                "description" : "IAM Access Key"
              }
            }
          }
        },
        "operationId" : "create-access-key"
      }
    },
    "/private-network/{id}:update-ip" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update the IP address of an instance attached to a managed private network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Static IP address lease for the corresponding network interface"
                  },
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-private-network-instance-ip"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to managed instances names (default: pool)"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Nodepool instances type"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Nodepool Deploy Target"
                  },
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Anti-affinity Groups"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Nodepool labels"
                  },
                  "taints" : {
                    "$ref" : "#/components/schemas/sks-nodepool-taints",
                    "description" : "Nodepool taints"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Nodepool instances disk size in GB"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Security Groups"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Private Networks"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Nodepool description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-sks-nodepool"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sks-nodepool"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve SKS Nodepool details",
        "operationId" : "get-sks-nodepool"
      },
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an SKS Nodepool",
        "operationId" : "delete-sks-nodepool"
      }
    },
    "/dns-domain/{id}/record/{record-id}" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dns-domain-record"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "record-id",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true
          }
        } ],
        "summary" : "Retrieve DNS domain record details",
        "operationId" : "get-dns-domain-record"
      }
    },
    "/instance-pool/{id}" : {
      "delete" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Instance Pool",
        "operationId" : "delete-instance-pool"
      },
      "get" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance-pool"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Instance Pool details",
        "operationId" : "get-instance-pool"
      },
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an Instance Pool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "instance-prefix" : {
                    "type" : "string",
                    "description" : "Prefix to apply to instances names (default: pool)"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Instances Cloud-init user-data"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instances type"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Instance Pool Deploy Target"
                  },
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Anti-affinity Groups"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "description" : "Instances SSH key"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance Pool name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Pool Labels"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instances disk size in GB"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Security Groups"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6 for instances"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Pool Private Networks"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instances template"
                  },
                  "elastic-ips" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/elastic-ip"
                    },
                    "description" : "Instances Elastic IPs"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Instance Pool description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-instance-pool"
      }
    },
    "/private-network" : {
      "get" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "private-networks" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/private-network"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Private Networks",
        "operationId" : "list-private-networks"
      },
      "post" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network description"
                  },
                  "netmask" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network netmask"
                  },
                  "start-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network start IP address"
                  },
                  "end-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network end IP address"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Private Network labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-private-network"
      }
    },
    "/instance/{id}:start" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation starts a virtual machine, potentially using a rescue profile if specified",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Start a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "rescue-profile" : {
                    "type" : "string",
                    "enum" : [ "netboot-efi", "netboot" ],
                    "description" : "Boot in Rescue Mode, using named profile (supported: netboot, netboot-efi)"
                  }
                }
              }
            }
          }
        },
        "operationId" : "start-instance"
      }
    },
    "/security-group/{id}" : {
      "get" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/security-group"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Security Group details",
        "operationId" : "get-security-group"
      },
      "delete" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Security Group",
        "operationId" : "delete-security-group"
      }
    },
    "/sks-cluster/{id}/authority/{authority}/cert" : {
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "cacert" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "This operation returns the certificate for the given SKS cluster authority encoded in base64.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "authority",
          "schema" : {
            "type" : "string",
            "enum" : [ "aggregation", "kubelet" ]
          }
        } ],
        "summary" : "Get the certificate for a SKS cluster authority",
        "operationId" : "get-sks-cluster-authority-cert"
      }
    },
    "/snapshot/{id}:export" : {
      "post" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Export a Snapshot",
        "operationId" : "export-snapshot"
      }
    },
    "/elastic-ip/{id}/{field}" : {
      "delete" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description" ]
          }
        } ],
        "summary" : "Reset an Elastic IP field to its default value",
        "operationId" : "reset-elastic-ip-field"
      }
    },
    "/quota/{entity}" : {
      "get" : {
        "tags" : [ "quotas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/quota"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "entity",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve Resource Quota",
        "operationId" : "get-quota"
      }
    },
    "/private-network/{id}:detach" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "detach-instance-from-private-network"
      }
    },
    "/private-network/{id}" : {
      "put" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Private Network",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Private Network description"
                  },
                  "netmask" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network netmask"
                  },
                  "start-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network start IP address"
                  },
                  "end-ip" : {
                    "type" : "string",
                    "format" : "ipv4",
                    "description" : "Private Network end IP address"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Private Network labes"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-private-network"
      },
      "get" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/private-network"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Private Network details",
        "operationId" : "get-private-network"
      },
      "delete" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Private Network",
        "operationId" : "delete-private-network"
      }
    },
    "/load-balancer/{id}/{field}" : {
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description", "labels" ]
          }
        } ],
        "summary" : "Reset a Load Balancer field to its default value",
        "operationId" : "reset-load-balancer-field"
      }
    },
    "/instance/{id}:scale" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation changes the Compute instance's type. Note: the new Instance Type must be within the same family (e.g. a standard instance cannot be scaled to gpu2 or storage).",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale a Compute instance to a new Instance Type",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance-type" ],
                "properties" : {
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instance Type"
                  }
                }
              }
            }
          }
        },
        "operationId" : "scale-instance"
      }
    },
    "/dns-domain" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "dns-domains" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/dns-domain"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List DNS domains",
        "operationId" : "list-dns-domains"
      }
    },
    "/instance/{id}:stop" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Stop a Compute instance",
        "operationId" : "stop-instance"
      }
    },
    "/security-group/{id}:attach" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "attach-instance-to-security-group"
      }
    },
    "/snapshot/{id}" : {
      "delete" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Snapshot",
        "operationId" : "delete-snapshot"
      },
      "get" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/snapshot"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Snapshot details",
        "operationId" : "get-snapshot"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}:scale" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Scale a SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "size" ],
                "properties" : {
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of instances"
                  }
                }
              }
            }
          }
        },
        "operationId" : "scale-sks-nodepool"
      }
    },
    "/dbaas-settings-mysql" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "required" : [ ],
                      "properties" : {
                        "mysql" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "mysql.conf configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS MySQL settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS MySQL settings",
        "operationId" : "get-dbaas-settings-mysql"
      }
    },
    "/sks-cluster/{id}/upgrade-service-level" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Upgrade a SKS cluster to pro",
        "operationId" : "upgrade-sks-cluster-service-level"
      }
    },
    "/load-balancer/{id}/service/{service-id}/{field}" : {
      "delete" : {
        "tags" : [ "network-load-balancer", "compute" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "service-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description" ]
          }
        } ],
        "summary" : "Reset a Load Balancer Service field to its default value",
        "operationId" : "reset-load-balancer-service-field"
      }
    },
    "/security-group/{id}/rules" : {
      "post" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a Security Group rule",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "flow-direction", "protocol" ],
                "properties" : {
                  "flow-direction" : {
                    "type" : "string",
                    "enum" : [ "ingress", "egress" ],
                    "description" : "Network flow direction to match"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Security Group rule description"
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network allowed"
                  },
                  "security-group" : {
                    "$ref" : "#/components/schemas/security-group-resource",
                    "description" : "Security Group allowed"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "esp", "icmp", "udp", "gre", "ah", "ipip", "icmpv6" ],
                    "description" : "Network protocol"
                  },
                  "icmp" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "code" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 254,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false
                      },
                      "type" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 254,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false
                      }
                    },
                    "description" : "ICMP details"
                  },
                  "start-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 65535,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Start port of the range"
                  },
                  "end-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 65535,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "End port of the range"
                  }
                }
              }
            }
          }
        },
        "operationId" : "add-rule-to-security-group"
      }
    },
    "/access-key-known-operations" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "access-key-operations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key-operation"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Retrieve all known available IAM Access Key operations and associated tags",
        "operationId" : "list-access-key-known-operations"
      }
    },
    "/instance/{id}/{field}" : {
      "delete" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "labels" ]
          }
        } ],
        "summary" : "Reset Instance field",
        "operationId" : "reset-instance-field"
      }
    },
    "/instance-pool/{id}/{field}" : {
      "delete" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "anti-affinity-groups", "description", "labels", "security-groups", "elastic-ips", "private-networks", "ssh-key", "user-data", "deploy-target", "ipv6-enabled" ]
          }
        } ],
        "summary" : "Reset an Instance Pool field to its default value",
        "operationId" : "reset-instance-pool-field"
      }
    },
    "/snapshot" : {
      "get" : {
        "tags" : [ "snapshot" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "snapshots" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/snapshot"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Snapshots",
        "operationId" : "list-snapshots"
      }
    },
    "/operation/{id}" : {
      "get" : {
        "tags" : [ "operation" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Operation details",
        "operationId" : "get-operation"
      }
    },
    "/security-group/{id}:remove-source" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Remove an external source from a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "cidr" ],
                "properties" : {
                  "cidr" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network to remove"
                  }
                }
              }
            }
          }
        },
        "operationId" : "remove-external-source-from-security-group"
      }
    },
    "/template/{id}" : {
      "delete" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Template",
        "operationId" : "delete-template"
      },
      "post" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Copy a Template from a zone to another",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "target-zone" ],
                "properties" : {
                  "target-zone" : {
                    "$ref" : "#/components/schemas/zone",
                    "description" : "Target Zone name"
                  }
                }
              }
            }
          }
        },
        "operationId" : "copy-template"
      },
      "put" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update template attributes",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Template Description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-template"
      },
      "get" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/template"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Template details",
        "operationId" : "get-template"
      }
    },
    "/instance-pool/{id}:evict" : {
      "put" : {
        "tags" : [ "instance-pool" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation evicts the specified Compute instances member from the Instance Pool, shrinking it to `&lt;current pool size&gt; - &lt;# evicted members&gt;`.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Evict Instance Pool members",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "instances" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId" : "evict-instance-pool-members"
      }
    },
    "/security-group/{id}:detach" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "detach-instance-from-security-group"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}:evict" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation evicts the specified Compute instances member from the Nodepool, shrinking it to `&lt;current nodepool size&gt; - &lt;# evicted members&gt;`.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Evict Nodepool members",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "instances" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uuid"
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        },
        "operationId" : "evict-sks-nodepool-members"
      }
    },
    "/dns-domain/{id}" : {
      "get" : {
        "tags" : [ "dns" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dns-domain"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "minimum" : 0,
            "exclusiveMinimum" : true
          }
        } ],
        "summary" : "Retrieve DNS domain details",
        "operationId" : "get-dns-domain"
      }
    },
    "/dbaas-service-type/{service-type-name}" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-type"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS service type",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "service-type-name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Get a DBaaS service type",
        "operationId" : "get-dbaas-service-type"
      }
    },
    "/security-group/{id}:add-source" : {
      "put" : {
        "tags" : [ "security-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Add an external source as a member of a Security Group",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "cidr" ],
                "properties" : {
                  "cidr" : {
                    "type" : "string",
                    "description" : "CIDR-formatted network to add"
                  }
                }
              }
            }
          }
        },
        "operationId" : "add-external-source-to-security-group"
      }
    },
    "/instance/{id}:reset" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation re-installs a Compute instance to a base template. If target template is provided it will be used to recreated instance from. Warning: the operation wipes all data stored on the disk.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Reset a Compute instance to a base/target template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Template to recreate Instance from"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  }
                }
              }
            }
          }
        },
        "operationId" : "reset-instance"
      }
    },
    "/ssh-key/{name}" : {
      "delete" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete a SSH key",
        "operationId" : "delete-ssh-key"
      },
      "get" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ssh-key"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve SSH key details",
        "operationId" : "get-ssh-key"
      }
    },
    "/deploy-target/{id}" : {
      "get" : {
        "tags" : [ "deploy-target" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/deploy-target"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Deploy Target details",
        "operationId" : "get-deploy-target"
      }
    },
    "/elastic-ip/{id}:detach" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Detach a Compute instance from an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "detach-instance-from-elastic-ip"
      }
    },
    "/load-balancer/{id}/service" : {
      "post" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Add a Load Balancer Service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "instance-pool", "protocol", "strategy", "port", "target-port", "healthcheck" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Load Balancer Service name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "description" : "Load Balancer Service description"
                  },
                  "instance-pool" : {
                    "$ref" : "#/components/schemas/instance-pool",
                    "description" : "Instance Pool to forward traffic to"
                  },
                  "protocol" : {
                    "type" : "string",
                    "enum" : [ "tcp", "udp" ],
                    "description" : "Network traffic protocol"
                  },
                  "strategy" : {
                    "type" : "string",
                    "enum" : [ "round-robin", "source-hash" ],
                    "description" : "Load balancing strategy"
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port exposed on the Load Balancer's public IP"
                  },
                  "target-port" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Port on which the network traffic will be forwarded to on the receiving instance"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/load-balancer-service-healthcheck",
                    "description" : "Healthcheck configuration"
                  }
                }
              }
            }
          }
        },
        "operationId" : "add-service-to-load-balancer"
      }
    },
    "/access-key-operations" : {
      "get" : {
        "tags" : [ "iam" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "access-key-operations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/access-key-operation"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Retrieve IAM Access Key operations and associated tags for the signing key",
        "operationId" : "list-access-key-operations"
      }
    },
    "/ssh-key" : {
      "get" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "ssh-keys" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ssh-key"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List SSH keys",
        "operationId" : "list-ssh-keys"
      },
      "post" : {
        "tags" : [ "ssh-key" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Import SSH key",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "public-key" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Private Network name"
                  },
                  "public-key" : {
                    "type" : "string",
                    "description" : "Public key value"
                  }
                }
              }
            }
          }
        },
        "operationId" : "register-ssh-key"
      }
    },
    "/snapshot/{id}:promote" : {
      "post" : {
        "tags" : [ "snapshot", "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Promote a Snapshot to a Template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "default-user" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template default user"
                  },
                  "ssh-key-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable SSH key-based login in the template"
                  },
                  "password-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable password-based login in the template"
                  }
                }
              }
            }
          }
        },
        "operationId" : "promote-snapshot-to-template"
      }
    },
    "/sks-cluster" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "level", "version" ],
                "properties" : {
                  "addons" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "exoscale-cloud-controller", "metrics-server" ]
                    },
                    "uniqueItems" : true,
                    "description" : "Cluster addons"
                  },
                  "auto-upgrade" : {
                    "type" : "boolean",
                    "description" : "Enable auto upgrade of the control plane to the latest patch version available"
                  },
                  "cni" : {
                    "type" : "string",
                    "enum" : [ "calico" ],
                    "description" : "Cluster CNI"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster name"
                  },
                  "level" : {
                    "type" : "string",
                    "enum" : [ "starter", "pro" ],
                    "description" : "Cluster service level"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Cluster Labels"
                  },
                  "version" : {
                    "type" : "string",
                    "description" : "Control plane Kubernetes version"
                  },
                  "oidc" : {
                    "$ref" : "#/components/schemas/sks-oidc",
                    "description" : "Cluster OpenID configmap"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-sks-cluster"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "sks-clusters" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/sks-cluster"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List SKS clusters",
        "operationId" : "list-sks-clusters"
      }
    },
    "/elastic-ip/{id}:attach" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Attach a Compute instance to an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "instance" ],
                "properties" : {
                  "instance" : {
                    "$ref" : "#/components/schemas/instance",
                    "description" : "Compute instance"
                  }
                }
              }
            }
          }
        },
        "operationId" : "attach-instance-to-elastic-ip"
      }
    },
    "/sks-cluster/{id}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an SKS cluster",
        "operationId" : "delete-sks-cluster"
      },
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sks-cluster"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve SKS cluster details",
        "operationId" : "get-sks-cluster"
      },
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Cluster name"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Cluster description"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Cluster labels"
                  },
                  "auto-upgrade" : {
                    "type" : "boolean",
                    "description" : "Enable auto upgrade of the control plane to the latest patch version available"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-sks-cluster"
      }
    },
    "/quota" : {
      "get" : {
        "tags" : [ "quotas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "quotas" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/quota"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "List Organization Quotas",
        "operationId" : "list-quotas"
      }
    },
    "/dbaas-settings-pg" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "required" : [ ],
                      "properties" : {
                        "pg" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "postgresql.conf configuration values"
                        },
                        "pglookout" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "PGLookout settings"
                        },
                        "pgbouncer" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "PGBouncer connection pooling settings"
                        },
                        "timescaledb" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "TimescaleDB extension configuration values"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS PostgreSQL settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS PostgreSQL settings",
        "operationId" : "get-dbaas-settings-pg"
      }
    },
    "/elastic-ip/{id}" : {
      "put" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update an Elastic IP",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "nullable" : true,
                    "description" : "Elastic IP description"
                  },
                  "healthcheck" : {
                    "$ref" : "#/components/schemas/elastic-ip-healthcheck",
                    "description" : "Elastic IP healthcheck"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-elastic-ip"
      },
      "get" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/elastic-ip"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Elastic IP details",
        "operationId" : "get-elastic-ip"
      },
      "delete" : {
        "tags" : [ "elastic-ip" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Elastic IP",
        "operationId" : "delete-elastic-ip"
      }
    },
    "/instance/{id}" : {
      "delete" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Compute instance",
        "operationId" : "delete-instance"
      },
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance name"
                  },
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instance Cloud-init user-data"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-instance"
      },
      "get" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/instance"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Compute instance details",
        "operationId" : "get-instance"
      }
    },
    "/sks-cluster/{id}/rotate-ccm-credentials" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Rotate Exoscale CCM credentials",
        "operationId" : "rotate-sks-ccm-credentials"
      }
    },
    "/sks-cluster/{id}/{field}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "description", "labels" ]
          }
        } ],
        "summary" : "Reset an SKS cluster field to its default value",
        "operationId" : "reset-sks-cluster-field"
      }
    },
    "/load-balancer/{id}" : {
      "put" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Update a Load Balancer",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "nullable" : true
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-load-balancer"
      },
      "delete" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete a Load Balancer",
        "operationId" : "delete-load-balancer"
      },
      "get" : {
        "tags" : [ "network-load-balancer" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/load-balancer"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Load Balancer details",
        "operationId" : "get-load-balancer"
      }
    },
    "/dbaas-service/{name}" : {
      "delete" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-common"
                }
              }
            }
          }
        },
        "description" : "Delete a DBaaS service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Delete a DBaaS service",
        "operationId" : "delete-dbaas-service"
      }
    },
    "/template" : {
      "get" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "templates" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/template"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "visibility",
          "schema" : {
            "type" : "string",
            "enum" : [ "private", "public" ]
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "family",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "List Templates",
        "operationId" : "list-templates"
      },
      "post" : {
        "tags" : [ "template" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Register a Template",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "url", "checksum", "ssh-key-enabled", "password-enabled" ],
                "properties" : {
                  "url" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Template source URL"
                  },
                  "default-user" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template default user"
                  },
                  "ssh-key-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable SSH key-based login"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template name"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Template size"
                  },
                  "checksum" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Template MD5 checksum"
                  },
                  "password-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable password-based login"
                  },
                  "boot-mode" : {
                    "type" : "string",
                    "enum" : [ "legacy", "uefi" ],
                    "description" : "Boot mode (default: legacy)"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Template description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "register-template"
      }
    },
    "/instance/{id}:reboot" : {
      "put" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Reboot a Compute instance",
        "operationId" : "reboot-instance"
      }
    },
    "/dbaas-settings-kafka" : {
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "settings" : {
                      "type" : "object",
                      "required" : [ ],
                      "properties" : {
                        "kafka" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka broker configuration values"
                        },
                        "kafka-connect" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka Connect configuration values"
                        },
                        "kafka-rest" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Kafka REST configuration"
                        },
                        "schema-registry" : {
                          "type" : "object",
                          "required" : [ ],
                          "properties" : {
                            "properties" : {
                              "type" : "object"
                            },
                            "additionalProperties" : {
                              "type" : "boolean"
                            },
                            "type" : {
                              "type" : "string"
                            },
                            "title" : {
                              "type" : "string"
                            }
                          },
                          "description" : "Schema Registry configuration"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Get DBaaS Kafka settings",
        "parameters" : [ ],
        "summary" : "Get DBaaS Kafka settings",
        "operationId" : "get-dbaas-settings-kafka"
      }
    },
    "/sks-cluster/{id}/nodepool" : {
      "post" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Create a new SKS Nodepool",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "name", "size", "disk-size", "instance-type" ],
                "properties" : {
                  "instance-prefix" : {
                    "type" : "string",
                    "maxLength" : 30,
                    "minLength" : 1,
                    "description" : "Prefix to apply to instances names (default: pool)"
                  },
                  "addons" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "linbit" ]
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool addons"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Nodepool instances type"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Nodepool Deploy Target"
                  },
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Anti-affinity Groups"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Nodepool labels"
                  },
                  "taints" : {
                    "$ref" : "#/components/schemas/sks-nodepool-taints",
                    "description" : "Nodepool taints"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Nodepool instances disk size in GB"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Security Groups"
                  },
                  "private-networks" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/private-network"
                    },
                    "uniqueItems" : true,
                    "description" : "Nodepool Private Networks"
                  },
                  "size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 0,
                    "exclusiveMinimum" : true,
                    "description" : "Number of instances"
                  },
                  "description" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Nodepool description"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-sks-nodepool"
      }
    },
    "/sks-cluster/{id}/nodepool/{sks-nodepool-id}/{field}" : {
      "delete" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "sks-nodepool-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "anti-affinity-groups", "description", "labels", "security-groups", "private-networks", "deploy-target" ]
          }
        } ],
        "summary" : "Reset an SKS Nodepool field to its default value",
        "operationId" : "reset-sks-nodepool-field"
      }
    },
    "/dbaas-redis/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-redis"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS Redis service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "redis-settings" : {
                    "type" : "object",
                    "description" : "Redis.conf settings"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-redis"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-redis"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS Redis service",
        "operationId" : "get-dbaas-service-redis"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-redis"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS Redis service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS Redis service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "plan" ],
                "properties" : {
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "redis-settings" : {
                    "type" : "object",
                    "description" : "Redis.conf settings"
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "recovery-backup-name" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Name of a backup to recover from for services that support backup names"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-redis"
      }
    },
    "/dbaas-postgres/{name}" : {
      "put" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-pg"
                }
              }
            }
          }
        },
        "description" : "Update a DBaaS PostgreSQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Update a DBaaS PostgreSQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ ],
                "properties" : {
                  "pgbouncer-settings" : {
                    "type" : "object",
                    "description" : "PGBouncer connection pooling settings"
                  },
                  "shared-buffers-percentage" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 60,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
                  },
                  "pglookout-settings" : {
                    "type" : "object",
                    "description" : "PGLookout settings"
                  },
                  "pg-settings" : {
                    "type" : "object",
                    "description" : "PostgreSQL-specific settings"
                  },
                  "timescaledb-settings" : {
                    "type" : "object",
                    "description" : "TimescaleDB extension configuration values"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "synchronous-replication" : {
                    "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
                    "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
                  },
                  "work-mem" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 1024,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
                  },
                  "variant" : {
                    "$ref" : "#/components/schemas/enum-pg-variant",
                    "description" : "Variant of the PostgreSQL service, may affect the features that are exposed by default"
                  }
                }
              }
            }
          }
        },
        "operationId" : "update-dbaas-service-pg"
      },
      "get" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-pg"
                }
              }
            }
          }
        },
        "description" : "Get a DBaaS PostgreSQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Get a DBaaS PostgreSQL service",
        "operationId" : "get-dbaas-service-pg"
      },
      "post" : {
        "tags" : [ "dbaas" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dbaas-service-pg"
                }
              }
            }
          }
        },
        "description" : "Create a DBaaS PostgreSQL service",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "name",
          "schema" : {
            "$ref" : "#/components/schemas/dbaas-service-name"
          }
        } ],
        "summary" : "Create a DBaaS PostgreSQL service",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "plan" ],
                "properties" : {
                  "pgbouncer-settings" : {
                    "type" : "object",
                    "description" : "PGBouncer connection pooling settings"
                  },
                  "recovery-backup-time" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "ISO time of a backup to recover from for services that support arbitrary times"
                  },
                  "shared-buffers-percentage" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 20,
                    "maximum" : 60,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value."
                  },
                  "admin-username" : {
                    "type" : "string",
                    "maxLength" : 64,
                    "minLength" : 1,
                    "description" : "Custom username for admin user. This must be set only when a new service is being created."
                  },
                  "pglookout-settings" : {
                    "type" : "object",
                    "description" : "PGLookout settings"
                  },
                  "pg-settings" : {
                    "type" : "object",
                    "description" : "PostgreSQL-specific settings"
                  },
                  "timescaledb-settings" : {
                    "type" : "object",
                    "description" : "TimescaleDB extension configuration values"
                  },
                  "termination-protection" : {
                    "type" : "boolean",
                    "description" : "Service is protected against termination and powering off"
                  },
                  "admin-password" : {
                    "type" : "string",
                    "maxLength" : 256,
                    "minLength" : 8,
                    "description" : "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created."
                  },
                  "ip-filter" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "description" : "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'"
                  },
                  "migration" : {
                    "type" : "object",
                    "description" : "Migrate data from existing server"
                  },
                  "version" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "PostgreSQL major version"
                  },
                  "maintenance" : {
                    "type" : "object",
                    "required" : [ "dow", "time" ],
                    "properties" : {
                      "dow" : {
                        "type" : "string",
                        "enum" : [ "saturday", "tuesday", "never", "wednesday", "sunday", "friday", "monday", "thursday" ],
                        "description" : "Day of week for installing updates"
                      },
                      "time" : {
                        "type" : "string",
                        "maxLength" : 8,
                        "minLength" : 8,
                        "description" : "Time for installing updates, UTC"
                      }
                    },
                    "description" : "Automatic maintenance settings"
                  },
                  "plan" : {
                    "type" : "string",
                    "maxLength" : 128,
                    "minLength" : 1,
                    "description" : "Subscription plan"
                  },
                  "backup-schedule" : {
                    "type" : "object",
                    "required" : [ ],
                    "properties" : {
                      "backup-hour" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 23,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed."
                      },
                      "backup-minute" : {
                        "type" : "integer",
                        "format" : "int64",
                        "minimum" : 0,
                        "maximum" : 59,
                        "exclusiveMinimum" : false,
                        "exclusiveMaximum" : false,
                        "description" : "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed."
                      }
                    }
                  },
                  "fork-from-service" : {
                    "$ref" : "#/components/schemas/dbaas-service-name",
                    "description" : "Service to fork from"
                  },
                  "synchronous-replication" : {
                    "$ref" : "#/components/schemas/enum-pg-synchronous-replication",
                    "description" : "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
                  },
                  "work-mem" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 1,
                    "maximum" : 1024,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB)."
                  },
                  "variant" : {
                    "$ref" : "#/components/schemas/enum-pg-variant",
                    "description" : "Variant of the PostgreSQL service, may affect the features that are exposed by default"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-dbaas-service-pg"
      }
    },
    "/sos/{bucket}/presigned-url" : {
      "get" : {
        "tags" : [ "sos" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "url" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "Generates Presigned Download URL for SOS object",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "bucket",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "key",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "Retrieve Presigned Download URL for SOS object",
        "operationId" : "get-sos-presigned-url"
      }
    },
    "/anti-affinity-group/{id}" : {
      "get" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/anti-affinity-group"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Retrieve Anti-affinity Group details",
        "operationId" : "get-anti-affinity-group"
      },
      "delete" : {
        "tags" : [ "anti-affinity-group" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Delete an Anti-affinity Group",
        "operationId" : "delete-anti-affinity-group"
      }
    },
    "/sks-cluster-version" : {
      "get" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "sks-cluster-versions" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "include-deprecated",
          "schema" : {
            "type" : "string"
          }
        } ],
        "summary" : "List available versions for SKS clusters",
        "operationId" : "list-sks-cluster-versions"
      }
    },
    "/instance" : {
      "post" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ ],
        "summary" : "Create a Compute instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "disk-size", "instance-type", "template" ],
                "properties" : {
                  "user-data" : {
                    "type" : "string",
                    "minLength" : 1,
                    "description" : "Instance Cloud-init user-data"
                  },
                  "instance-type" : {
                    "$ref" : "#/components/schemas/instance-type",
                    "description" : "Instance Type"
                  },
                  "deploy-target" : {
                    "$ref" : "#/components/schemas/deploy-target",
                    "description" : "Instance Deploy Target"
                  },
                  "anti-affinity-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/anti-affinity-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Anti-affinity Groups"
                  },
                  "ssh-key" : {
                    "$ref" : "#/components/schemas/ssh-key",
                    "description" : "Instance SSH Key"
                  },
                  "name" : {
                    "type" : "string",
                    "maxLength" : 255,
                    "minLength" : 1,
                    "description" : "Instance name"
                  },
                  "labels" : {
                    "$ref" : "#/components/schemas/labels",
                    "description" : "Instance Labels"
                  },
                  "disk-size" : {
                    "type" : "integer",
                    "format" : "int64",
                    "minimum" : 10,
                    "maximum" : 50000,
                    "exclusiveMinimum" : false,
                    "exclusiveMaximum" : false,
                    "description" : "Instance disk size in GB"
                  },
                  "security-groups" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/security-group"
                    },
                    "uniqueItems" : true,
                    "description" : "Instance Security Groups"
                  },
                  "ipv6-enabled" : {
                    "type" : "boolean",
                    "description" : "Enable IPv6"
                  },
                  "template" : {
                    "$ref" : "#/components/schemas/template",
                    "description" : "Instance Template"
                  }
                }
              }
            }
          }
        },
        "operationId" : "create-instance"
      },
      "get" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ ],
                  "properties" : {
                    "instances" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/instance"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "query",
          "required" : false,
          "name" : "manager-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "query",
          "required" : false,
          "name" : "manager-type",
          "schema" : {
            "type" : "string",
            "enum" : [ "instance-pool" ]
          }
        } ],
        "summary" : "List Compute instances",
        "operationId" : "list-instances"
      }
    },
    "/private-network/{id}/{field}" : {
      "delete" : {
        "tags" : [ "private-network" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "required" : true,
          "name" : "field",
          "schema" : {
            "type" : "string",
            "enum" : [ "labels" ]
          }
        } ],
        "summary" : "Reset Private Network field",
        "operationId" : "reset-private-network-field"
      }
    },
    "/sks-cluster/{id}/upgrade" : {
      "put" : {
        "tags" : [ "sks" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Upgrade an SKS cluster",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "version" ],
                "properties" : {
                  "version" : {
                    "type" : "string",
                    "description" : "Control plane Kubernetes version"
                  }
                }
              }
            }
          }
        },
        "operationId" : "upgrade-sks-cluster"
      }
    },
    "/instance/{instance-id}:revert-snapshot" : {
      "post" : {
        "tags" : [ "instance" ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/operation"
                }
              }
            }
          }
        },
        "description" : "This operation reverts the snapshot to the Compute instance volume, restoring stored data as it was at the time of the snapshot.\nThe Compute instance must be previously stopped.",
        "parameters" : [ {
          "in" : "path",
          "required" : true,
          "name" : "instance-id",
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "summary" : "Revert a snapshot for an instance",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "id" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "format" : "uuid",
                    "description" : "Snapshot ID"
                  }
                }
              }
            }
          }
        },
        "operationId" : "revert-instance-to-snapshot"
      }
    }
  },
  "x-topics" : [ {
    "title" : "API Request Signature",
    "content" : "\nIn order to authenticate legitimate users, the Exoscale API requires incoming requests to be signed using valid Exoscale API account credentials with the following mechanism.\n## Signature Mechanism\nThe *message* (i.e. content) to sign contains several segments concatenated using a line return character (`\\n`). All segments must be included and in the described order, including empty ones depending on the context of the request (e.g. no request body).\n* Request method and request URL (path only), separated by a space character\n* Request body\n* Request URL parameters (Query String) values, concatenated without separator. The matching parameter names have to be specified in the resulting signature header `signed-query-args=` pragma, separated by semicolons (e.g. `p1;p2;pN`).\n* Request header values, concatenated without separator (none at the moment, leave empty)\n* Request expiration date in UNIX timestamp format\nExample *message* to sign for `GET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0?p1=v1&p2=v2` :\n```\nGET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0\nv1v2\n1599140767\n```\nThe request signature consists of the [HMAC][hmac] hash of the base64-encoded *message* and the Exoscale API secret using the SHA265 function:\n```\nsignature = HMAC_SHA256(Exoscale API secret, BASE64_ENCODE(message))\n```\nFinally, the computed signature must be added to the API request in a `Authorization` header such as:\n```\nAuthorization: EXO2-HMAC-SHA256 credential=<Exoscale API key>,expires=<expiration date UNIX timestamp>,signature=<signature>\n```\nExample API query:\n```\nGET /v2/resource/a02baf5a-a3e4-49a0-857b-8a08d276c1c0?p1=v1&p2=v2 HTTP/1.1\nHost: api-ch-gva-2.exoscale.com\nAuthorization: EXO2-HMAC-SHA256 credential=EXO29147e9f89102b7ac1e88514,signed-query-args=p1;p2,expires=1599140767,signature=2AOBQsbElQb4FpKT/FM/9T4NobjlmZkSGvvdUth/xlY=\n```\n## Reference Implementations\nYou can look up the following existing reference implementations:\n* Go: [github.com/exoscale/egoscale/api/v2 > `SecurityProviderExoscale.signRequest`](https://github.com/exoscale/egoscale/blob/master/v2/api/security.go)\n* Python: [requests-exoscale-auth > `ExoscaleV2Auth`](https://github.com/exoscale/requests-exoscale-auth/blob/master/exoscale_auth.py)\n[hmac]: https://en.wikipedia.org/wiki/HMAC\n"
  } ]
}